import base64,time
from threading import Thread

def getDbConection(connect_dict):
    dbh = None
    cur = None
    try:
        """ Connect to database """
        if dbh:
            return True
        
        try:
            import psycopg2 as pg #@UnresolvedImport
        except Exception, emsg:
            raise Exception('PSQL > import : ' + str(emsg))

        connect_dict = dict((k, v) for k, v in connect_dict.iteritems() if v is not None)
        try:
            dbh = pg.connect(**connect_dict)
        except Exception, emsg:
            raise Exception('PSQL > connect : ' + str(emsg))

        cur = dbh.cursor()
        return cur
    except Exception, emsg:
        print('DB Connection Exception ->' + str(emsg))
    
params = {'host': '127.0.0.1','port': '5432' ,'user':'postgres', 'passw': 'cG9zdGdyZXM='}
host = params.get('host', '127.0.0.1')
port = params.get('port','5432')
user = params.get('user', 'postgres')
passwd = base64.decodestring(params.get('passw','cG9zdGdyZXM='))
database = params.get('database','vistara')
connect_dict = {'host': host, 'port': port, 'database': database,}

if user != "NA":
    connect_dict.update({'user': user})
if passwd != "NA":
    connect_dict.update({'password': passwd})

sql = 'SELECT sum(numbackends) FROM pg_stat_database;'
def getconn():
    count = 0
    cur = getDbConection(connect_dict)
    while count < 100:
        time.sleep(5)
        value = cur.execute(sql)
        print value
        count = count + 1

for i in range(10):
    t = Thread(target = getconn)
    t.start()
	
